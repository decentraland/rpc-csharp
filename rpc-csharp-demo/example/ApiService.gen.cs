// AUTOGENERATED, DO NOT EDIT
// Type definitions for server implementations of ports.
// package: Proto
// file: api.proto
// file: [{"namespace":"api_pb","path":"./api_pb"}]

using System.Collections.Generic;
using Cysharp.Threading.Tasks;
using Google.Protobuf;
using rpc_csharp.server;

namespace Proto
{
    public abstract class BookService<Context>
    {
        public string ServiceName = "BookService";

        // Unary
        public abstract UniTask<Book> GetBook(GetBookRequest request, Context context);

        // Stream
        public abstract UniTask<IEnumerator<Book>> QueryBooks(GetBookRequest request, Context context);

        // Generated code
        public ServerModuleDefinition<Context> GetModuleDefinition()
        {
            var result = new ServerModuleDefinition<Context>();

            result.definition.Add("GetBook",
                async (payload, context) =>
                {
                    var book = await GetBook(GetBookRequest.Parser.ParseFrom(payload), context);
                    return book?.ToByteString();
                });

            result.streamDefinition.Add("QueryBooks",
                async (payload, context) =>
                {
                    var iterator = await QueryBooks(GetBookRequest.Parser.ParseFrom(payload), context);
                    return RegisterStreamFn(iterator);
                });

            return result;
        }

        private IEnumerator<ByteString> RegisterStreamFn<T>(IEnumerator<T> generator)
            where T : IMessage
        {
            using (var iterator = generator)
            {
                while (iterator.MoveNext())
                {
                    var current = iterator.Current;
                    if (current != null)
                    {
                        yield return current.ToByteString();
                    }
                }
            }
        }
    }
}