// AUTOGENERATED, DO NOT EDIT
// Type definitions for server implementations of ports.
// package: Proto
// file: api.proto
// file: [{"namespace":"api_pb","path":"./api_pb"}]
using System.Collections.Generic;
using Cysharp.Threading.Tasks;
using Google.Protobuf;
using rpc_csharp.server;
namespace Proto {

public abstract class BookService<Context>
{
  public string ServiceName = "BookService";

  public abstract UniTask<Book> GetBook(GetBookRequest request, Context context);
  public abstract IEnumerator<UniTask<Book>> QueryBooks(QueryBooksRequest request, Context context);


  public ServerModuleDefinition<Context> GetModuleDefinition()
  {
      var result = new ServerModuleDefinition<Context>();
      
      result.definition.Add("GetBook", async (payload, context) => { var res = await GetBook(GetBookRequest.Parser.ParseFrom(payload), context); return res.ToByteArray(); });
      result.streamDefinition.Add("QueryBooks", (payload, context) => { return RegisterStreamFn(QueryBooks(QueryBooksRequest.Parser.ParseFrom(payload), context)); });

      return result;
  }

  private static IEnumerator<UniTask<byte[]>> RegisterStreamFn<T>(IEnumerator<UniTask<T>> generator)
  where T : IMessage
  {
    using (var iterator = generator)
    {
        while (iterator.MoveNext())
        {
            var response = iterator.Current.GetAwaiter().GetResult().ToByteArray();
            yield return UniTask.FromResult(response);
        }
    }
  }
    
}
}
